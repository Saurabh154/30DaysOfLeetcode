Given an array A[] of size N and a positive integer K, find the first negative integer for each and every window(contiguous subarray) of size K.
Example 1:
Input : 
N = 5
A[] = {-8, 2, 3, -6, 10}
K = 2
Output : 
-8 0 -6 -6
Explanation :
First negative integer for each window of size k
{-8, 2} = -8
{2, 3} = 0 (does not contain a negative integer)
{3, -6} = -6
{-6, 10} = -6

//code
vector<long long> printFirstNegativeInteger(long long int A[], long long int N, long long int K) 
{
    deque<long long> ans;  //take ans list to store all -ve element
    vector<long long> res; //this is for store the answer
    
    int i=0, j=0;
    
    while(j < N){
        
        if(A[j] < 0){  //agar koi bhi negative element aaya to 
            ans.push_back(A[j]);  //add into the ans list 
        }
        
        if(j-i+1 < K){  //agar window k ke barabar nhi hai to j++
            j++;
        }
        else if(j-i+1 == K){ //agar k ke barabar ho gaya to
            
            if(ans.size()==0){ // iska matlab hua ki ek bhi -ve element nhi aaya hai
                res.push_back(0); // to simply 0 res me store kara denge
            }
            else{    // atleast 1 element -ve hai
                res.push_back(ans.front());  // simply hm ans list ke front element ko res me daal denge
                if(A[i] == ans.front())  // aur sath hi ans list ke front ke element ko pop bhi kar denge
                    ans.pop_front();
            }
            
            //aur i,j ko badha denge
            i++;  
            j++;
            
        }
    }
    return res;
}
