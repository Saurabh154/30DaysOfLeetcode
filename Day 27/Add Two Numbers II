/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        stack<int> s1;
        stack<int> s2;
        ListNode* temp1 = l1;
        ListNode* temp2 = l2;
        ListNode* temp;

        while(temp1 || temp2){
            if(temp1){
                s1.push(temp1->val);
                temp1 = temp1->next;
            }
            if(temp2){
                s2.push(temp2->val);
                temp2 = temp2->next;
            }
        }
        ListNode* dummyNode = new ListNode(0);
        // ListNode* curr = dummyNode;
        int carry = 0;
        int sum = 0;
        while(!s1.empty() || !s2.empty())
		{
		    if(!s1.empty())
			{
				sum+=s1.top();
				s1.pop();
			}
			if(!s2.empty())
			{
				sum+=s2.top();;
			    s2.pop();
			}
			dummyNode->val=sum%10;
			ListNode* head=new ListNode(sum/10);
			head->next=dummyNode;
			
            dummyNode=head;
			sum/=10;
		}
		return dummyNode->val==0? dummyNode->next:dummyNode;   

    }
};
