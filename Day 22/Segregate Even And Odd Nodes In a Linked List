Node* segregateEvenOdd(Node* head)
{
    if(head==NULL ||head->next==NULL) return head;

    Node*evenHead=new Node(-1);
    Node*oddHead=new Node(-1);
    Node*dummy_even=evenHead;
    Node*dummy_odd=oddHead;
    Node*temp=head;

    while(temp!=NULL){

        if((temp->data)%2==0){
            dummy_even->next=temp;
            dummy_even=temp;
        }

        else{
            dummy_odd->next=temp;
            dummy_odd=temp;
        }

        temp=temp->next;
    }

    Node*newHead=evenHead->next;
    dummy_even->next=oddHead->next;
    dummy_odd->next=NULL;
    delete evenHead;
    delete oddHead;

    return newHead;
    
}
